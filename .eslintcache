[{"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/ItemFriend/ItemFriend.jsx":"1","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormCreateGroupChat/FormCreateGroupChat.jsx":"2","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/Conversation/header/HeaderConversation.jsx":"3","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/ItemConversation/ItemConversation.jsx":"4","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/reducers/nav.js":"5","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/AddFriendItem/AddFriendItem.jsx":"6","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormCreateGroupChat/MemberItem/MemberItem.jsx":"7","/home/ngoctrong102/Documents/chat/chat-app/client/src/App.js":"8","/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/chatApp/ChatApp.jsx":"9","/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/removeToken.js":"10","/home/ngoctrong102/Documents/chat/chat-app/client/src/service/User.js":"11","/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/FormPopUp/FormPopUp.jsx":"12","/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/serialize.js":"13","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/actions/user.js":"14","/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/Sidebar/Sidebar.jsx":"15","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/Conversation/body/BodyConversation.jsx":"16","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/NavFeature/NavFeature.jsx":"17","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/HeaderChatSideBar/HeaderChatSideBar.jsx":"18","/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/auth/LoginPage/LoginPage.jsx":"19","/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/navigator/navigator.jsx":"20","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/SignUpForm/SignUpForm.jsx":"21","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormProfile/FormProfile.jsx":"22","/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/auth/SignUp/SignUpPage.jsx":"23","/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/setToken.js":"24","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/reducers/user.js":"25","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/actions/conversations.js":"26","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormAddFriends/FormAddFriends.jsx":"27","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/Conversation/form/FormConversation.jsx":"28","/home/ngoctrong102/Documents/chat/chat-app/client/src/index.js":"29","/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/conversation/conversation.jsx":"30","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/actions/nav.js":"31","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/BodyFriendSideBar/BodyFriendSideBar.jsx":"32","/home/ngoctrong102/Documents/chat/chat-app/client/src/reportWebVitals.js":"33","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/reducers/index.js":"34","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/actions/auth.js":"35","/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/getToken.js":"36","/home/ngoctrong102/Documents/chat/chat-app/client/src/configs/socket.js":"37","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/reducers/message.js":"38","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/LoginForm/LoginForm.jsx":"39","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/BodyChatSideBar/BodyChatSideBar.jsx":"40","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/HeaderFriendSideBar/HeaderFriendSideBar.jsx":"41","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormCreateGroupChat/UserItem/UserItem.jsx":"42","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/Conversation/body/MessageBox/MessageBox.jsx":"43","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/ItemReqFriend/ItemReqFriend.jsx":"44","/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/popupWindow.js":"45","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/CallPopUp/CallPopUp.jsx":"46"},{"size":2027,"mtime":1617694232979,"results":"47","hashOfConfig":"48"},{"size":4292,"mtime":1617526002996,"results":"49","hashOfConfig":"48"},{"size":3463,"mtime":1617799425054,"results":"50","hashOfConfig":"48"},{"size":2510,"mtime":1617694232903,"results":"51","hashOfConfig":"48"},{"size":824,"mtime":1617526003000,"results":"52","hashOfConfig":"48"},{"size":1320,"mtime":1617694232935,"results":"53","hashOfConfig":"48"},{"size":368,"mtime":1617694232935,"results":"54","hashOfConfig":"48"},{"size":1678,"mtime":1617779480332,"results":"55","hashOfConfig":"48"},{"size":4237,"mtime":1617804571928,"results":"56","hashOfConfig":"48"},{"size":119,"mtime":1616318815606,"results":"57","hashOfConfig":"48"},{"size":2337,"mtime":1617693625856,"results":"58","hashOfConfig":"48"},{"size":1320,"mtime":1616318815606,"results":"59","hashOfConfig":"48"},{"size":248,"mtime":1616318815606,"results":"60","hashOfConfig":"48"},{"size":570,"mtime":1616318815610,"results":"61","hashOfConfig":"48"},{"size":1760,"mtime":1616318815606,"results":"62","hashOfConfig":"48"},{"size":637,"mtime":1616318815602,"results":"63","hashOfConfig":"48"},{"size":8661,"mtime":1617694232975,"results":"64","hashOfConfig":"48"},{"size":1662,"mtime":1616318815606,"results":"65","hashOfConfig":"48"},{"size":233,"mtime":1616318815606,"results":"66","hashOfConfig":"48"},{"size":1005,"mtime":1617127822383,"results":"67","hashOfConfig":"48"},{"size":3466,"mtime":1616318815606,"results":"68","hashOfConfig":"48"},{"size":2927,"mtime":1617694232895,"results":"69","hashOfConfig":"48"},{"size":239,"mtime":1616318815606,"results":"70","hashOfConfig":"48"},{"size":162,"mtime":1616318815606,"results":"71","hashOfConfig":"48"},{"size":4592,"mtime":1617526003000,"results":"72","hashOfConfig":"48"},{"size":794,"mtime":1617526003000,"results":"73","hashOfConfig":"48"},{"size":2697,"mtime":1616318815602,"results":"74","hashOfConfig":"48"},{"size":3474,"mtime":1616318815602,"results":"75","hashOfConfig":"48"},{"size":868,"mtime":1616318815606,"results":"76","hashOfConfig":"48"},{"size":1363,"mtime":1616954774074,"results":"77","hashOfConfig":"48"},{"size":301,"mtime":1616318815610,"results":"78","hashOfConfig":"48"},{"size":1698,"mtime":1616318815602,"results":"79","hashOfConfig":"48"},{"size":362,"mtime":1616318815606,"results":"80","hashOfConfig":"48"},{"size":224,"mtime":1616318815610,"results":"81","hashOfConfig":"48"},{"size":1737,"mtime":1617526003000,"results":"82","hashOfConfig":"48"},{"size":138,"mtime":1616318815606,"results":"83","hashOfConfig":"48"},{"size":166,"mtime":1617723641515,"results":"84","hashOfConfig":"48"},{"size":0,"mtime":1616318815610,"results":"85","hashOfConfig":"48"},{"size":4523,"mtime":1617009526796,"results":"86","hashOfConfig":"48"},{"size":840,"mtime":1616318815602,"results":"87","hashOfConfig":"48"},{"size":1124,"mtime":1616318815606,"results":"88","hashOfConfig":"48"},{"size":498,"mtime":1617694232927,"results":"89","hashOfConfig":"48"},{"size":549,"mtime":1617694232935,"results":"90","hashOfConfig":"48"},{"size":1132,"mtime":1617694232907,"results":"91","hashOfConfig":"48"},{"size":399,"mtime":1617803164342,"results":"92","hashOfConfig":"48"},{"size":2489,"mtime":1617810134937,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"13jx9cq",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/ItemFriend/ItemFriend.jsx",[],["203","204"],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormCreateGroupChat/FormCreateGroupChat.jsx",["205"],"import { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\n\nimport { openConversation } from '../../store/actions/conversations';\nimport { togglePopUp } from '../../store/actions/nav';\n\nimport User from '../../service/User';\n\nimport './FormCreateGroupChat.scss';\nimport UserItem from './UserItem/UserItem';\nimport MemberItem from './MemberItem/MemberItem';\n\nconst FormCreateGroupChat = ({ user, togglePopUp, openConversation }) => {\n  var formRef = useRef();\n  var checkBtnRef = useRef();\n\n  var [users, setUsers] = useState([]);\n  var [groupName, setGroupName] = useState('');\n  var [members, setMembers] = useState([]);\n\n  let timeout = null;\n  const handleSearch = (e) => {\n    e.preventDefault();\n    clearTimeout(timeout);\n    if (e.target.value) {\n      timeout = setTimeout(() => {\n        User.searchFriends(e.target.value).then(\n          res => {\n            setUsers(res.listUser)\n          })\n      }, 300)\n    }\n    else {\n      setUsers([]);\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    formRef.current.validateAll();\n    if (checkBtnRef.current.context._errors.length === 0) {\n      var memberIDs = members.map(member => member._id);\n      memberIDs.push(user._id);\n      openConversation(memberIDs)\n    }\n  }\n  const toggleMember = (member, isChecked) => {\n    if (isChecked) {\n      setMembers([...members, member])\n    } else {\n      setMembers(prev => prev.filter(m => m._id != member._id))\n    }\n  }\n  var listUsers = users.length ? (\n    users.map((u, i) => <UserItem user={u} checked={members.map(m => m._id).includes(u._id)} onChange={toggleMember} key={i} />)\n  ) : (\n    <div style={{\n      textAlign: \"center\",\n      color: 'gray'\n    }}>\n      Tìm bạn bè\n    </div>\n  );\n\n  const removeMembers = (memId) => {\n    setMembers(prev => prev.filter((mem => mem._id !== memId)))\n  }\n  var listMembers = members.map((mem, i) => <MemberItem removeMembers={removeMembers} key={i} member={mem} />)\n\n  return (\n    <div className=\"form-popup\">\n      <div className=\"form-title\">\n        <h4>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"></line><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line></svg>\n          <span>Add Group</span>\n        </h4>\n        <button className=\"close-form\" onClick={(e) => togglePopUp()}><span>x</span></button>\n      </div>\n      <div className=\"form-body\">\n        <Form ref={formRef} onSubmit={handleSubmit} >\n          <div className=\"form-group\">\n            <label htmlFor=\"group-name\">Group name</label>\n            <Input\n              id=\"group-name\"\n              type=\"text\"\n              placeholder=\"Enter group name\"\n              value={groupName}\n              onChange={(e) => { setGroupName(e.target.value) }}\n            />\n          </div>\n          {/* {members.length !== 0 && */}\n          <div className=\"form-group\">\n            <label>Members</label>\n            <ul className=\"member-list\">\n              {listMembers}\n            </ul>\n          </div>\n          {/* } */}\n          <div className=\"form-group\">\n            <Input\n              type=\"text\"\n              placeholder=\"Search by name or email\"\n              onChange={handleSearch}\n            />\n          </div>\n          <ul className=\"list-user\">\n            {listUsers}\n          </ul>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Create\" />\n          </div>\n          <CheckButton style={{ display: \"none\" }} ref={checkBtnRef} />\n        </Form>\n\n      </div>\n    </div >\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userState.user\n  }\n}\n\nfunction mapActionToProps(dispatch) {\n  return {\n    togglePopUp: (formName = '') => dispatch(togglePopUp(formName)),\n    openConversation: (users) => dispatch(openConversation(users))\n  }\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(FormCreateGroupChat);","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/Conversation/header/HeaderConversation.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/ItemConversation/ItemConversation.jsx",["206","207"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeConversation } from '../../store/actions/conversations';\n\nimport './ItemConversation.scss';\n\nconst ItemConversation = ({ conversation, user, changeConversation, index }) => {\n    const toggleMenuAction = (e) => {\n        e.preventDefault();\n        if (e.currentTarget.classList.contains('show')) {\n            e.currentTarget.classList.remove('show');\n        }\n        else {\n            var show = document.querySelector('.action-dropdown.show');\n            if (show) show.classList.remove('show');\n            e.currentTarget.classList.add('show');\n        }\n    }\n    var users = conversation.users.filter(u => u._id != user._id);\n    return (\n        <li className={`item-conversation ${conversation.newMessage ? \"has-message\" : ''}`}\n            onClick={(e) => {\n                // if (e.currentTarget != e.target) return false;\n                changeConversation(index)\n                // e.stopPropagation();\n            }}>\n            <div className=\"avt active\">\n                <div className=\"avt-wrapper\">\n                    {users.map((u, i) => <img src={process.env.REACT_APP_API_URL + \"uploads/\" + u.avatar} key={i} />)}\n                </div>\n            </div>\n            <div className=\"body-item-conversation new-mess \">\n                <div>\n                    <h4>{users.map(u => u.username).join(', ')}</h4>\n                    <p>Tin nhắn gần nhất sẽ hiện ở đây sasasasasasasa</p>\n                </div>\n                <div className=\"item-actions\">\n                    <small>03:41 PM</small>\n                    <div className=\"action-dropdown\" onClick={toggleMenuAction}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"1\"></circle><circle cx=\"19\" cy=\"12\" r=\"1\"></circle><circle cx=\"5\" cy=\"12\" r=\"1\"></circle></svg>\n                        <div className=\"action-menu\">\n                            <button>Profile</button>\n                            <button>Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </li>\n    )\n}\nconst mapActionToProps = dispatch => {\n    return {\n        changeConversation: (index) => dispatch(changeConversation(index))\n    };\n}\n\nexport default connect(null, mapActionToProps)(ItemConversation);","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/reducers/nav.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/AddFriendItem/AddFriendItem.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormCreateGroupChat/MemberItem/MemberItem.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/App.js",["208"],"import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport './App.css';\n// component\nimport LoginPage from './containers/auth/LoginPage/LoginPage';\nimport SignUpPage from './containers/auth/SignUp/SignUpPage';\n//actions\nimport { fetchUserInfor } from './store/actions/auth';\n// helpers\nimport getToken from './helpers/getToken';\nimport getSocket from './configs/socket';\nimport ChatApp from './containers/chatApp/ChatApp';\nimport CallPopUp from './components/CallPopUp/CallPopUp';\n\n\nfunction App({ user, fetchUserInfor }) {\n  useEffect(() => {\n    if (!user) {\n      const token = getToken();\n      if (token)\n        fetchUserInfor(token);\n    }\n  }, [])\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          {user ?\n            <ChatApp socket={getSocket(getToken())} user={user} />\n            :\n            <Redirect to=\"/login\" />\n          }\n        </Route>\n        <Route path=\"/login\">\n          {user ?\n            <Redirect to=\"/\" />\n            :\n            <LoginPage />\n          }\n        </Route>\n        <Route path=\"/signup\">\n          {user ?\n            <Redirect to=\"/\" />\n            :\n            <SignUpPage />\n          }\n        </Route>\n        <Route path=\"/call\">\n          <CallPopUp />\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userState.user\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchUserInfor: (token) => dispatch(fetchUserInfor(token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/chatApp/ChatApp.jsx",["209","210","211"],"\n\nimport { createContext, useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Navigator from '../navigator/navigator'\nimport Conversation from '../conversation/conversation';\nimport FormPopUp from '../FormPopUp/FormPopUp';\nimport { addNewMessage, changeConversation, firstMessage } from '../../store/actions/conversations'\n\nimport popupWindow from '../../helpers/popupWindow';\n\nlet SocketContext = createContext();\n\nconst ChatApp = ({ popUp, socket, addNewMessage, firstMessage, currentConversation, changeConversation }) => {\n  let [isMobile, setIsMobile] = useState(document.body.offsetWidth < 824);\n  const changeIsMobile = e => {\n    setIsMobile(document.body.offsetWidth < 824);\n  }\n  useEffect(() => {\n    socket.on('NEW_MESSAGE', ({ conversationID, message }) => {\n      // console.log(data)\n      addNewMessage(conversationID, message);\n    })\n    socket.on('FIRST_MESSAGE', ({ oldID, conversation }) => {\n      // console.log(data)\n      firstMessage(oldID, conversation);\n    })\n    socket.on('HAVE_CALL', async ({ conversationID, peerID, isVideoCall }) => {\n      // var a = window.confirm(\"có cuộc gọi nè\");\n      // if (a) {\n      //   var stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n      //   vL.current.srcObject = stream;\n      //   var peer = new Peer({\n      //     host: process.env.REACT_APP_PEER_SERVER_HOST,\n      //     debug: 1,\n      //     path: '/',\n      //     port: 9000\n      //   });\n      //   peer.on('open', (id) => {\n      //     var call = peer.call(peerID, stream);\n\n      //     call.on('stream', (streamRemote) => {\n      //       console.log(\"streamRemote\");\n      //       v.current.srcObject = streamRemote;\n      //       // v.current.play();\n      //       console.log(streamRemote);\n      //       var playPromise = v.current.play();\n\n      //       // if (playPromise !== undefined) {\n      //       //   playPromise\n      //       //     .then(_ => {\n      //       //       // Automatic playback started!\n      //       //       // Show playing UI.\n      //       //       console.log(\"audio played auto\");\n      //       //     })\n      //       //     .catch(error => {\n      //       //       // Auto-play was prevented\n      //       //       // Show paused UI.\n      //       //       console.log(\"playback prevented\");\n      //       //     });\n      //       // }\n      //     })\n      //   })\n      // }\n      var a = window.confirm(\"có cuộc gọi nè\");\n      if (a) {\n        var newWindow = popupWindow('/call', \"Video call\", 600, 800);\n        if (newWindow) {\n          newWindow.addEventListener('load', () => {\n            newWindow.answerCall(conversationID, isVideoCall)\n          })\n        }\n      }\n    })\n    window.addEventListener('resize', changeIsMobile)\n\n    return () => {\n      socket.disconnect();\n      window.removeEventListener('resize', changeIsMobile)\n    }\n  }, [])\n  useEffect(() => {\n    if (!isMobile && currentConversation == null) {\n      changeConversation(0);\n    }\n    console.log(isMobile, 12345)\n  }, [isMobile])\n\n  const renderBodyApp = () => {\n    if (isMobile) {\n      if (currentConversation !== null) {\n        return <Conversation isMobile={isMobile} />\n      } else return <Navigator isMobile={isMobile} />\n    } else {\n      return (\n        <>\n          <Navigator isMobile={isMobile} />\n          <Conversation isMobile={isMobile} />\n        </>\n      )\n    }\n  }\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <div className=\"app\">\n        {popUp && <FormPopUp />}\n        {renderBodyApp()}\n      </div>\n    </SocketContext.Provider >\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    popUp: state.navState.popUp,\n    currentConversation: state.userState.currentConversation,\n    user: state.userState.user\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addNewMessage: (conversationID, message) => dispatch(addNewMessage(conversationID, message)),\n    firstMessage: (oldID, conversation) => dispatch(firstMessage(oldID, conversation)),\n    changeConversation: (index) => dispatch(changeConversation(index))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatApp);\nexport { SocketContext };","/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/removeToken.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/service/User.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/FormPopUp/FormPopUp.jsx",["212"],"import { useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormProfile from '../../components/FormProfile/FormProfile';\nimport FormAddFriends from '../../components/FormAddFriends/FormAddFriends';\nimport FormCreateGroupChat from '../../components/FormCreateGroupChat/FormCreateGroupChat';\n\nimport { togglePopUp } from '../../store/actions/nav';\n\nimport './FormPopUp.scss';\n\nconst FormPopUp = ({ togglePopUp, popUp }) => {\n  var formWrapper = useRef();\n\n  const handleClick = (e) => {\n    if (e.target === formWrapper.current) {\n      togglePopUp();\n    }\n  }\n\n  const renderForm = () => {\n    switch (popUp) {\n      case 'PROFILE': {\n        return (\n          <FormProfile />\n        )\n      }\n      case 'ADD_FRIENDS': {\n        return (\n          <FormAddFriends />\n        )\n      }\n      case 'CREATE_GROUP_CHAT': {\n        return <FormCreateGroupChat />\n      }\n    }\n  }\n\n  return (\n    <div className=\"form-wrapper\" onClick={handleClick} ref={formWrapper}>\n      {\n        renderForm()\n      }\n\n    </div >\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    popUp: state.navState.popUp\n  }\n}\n\n\nfunction mapActionToProps(dispatch) {\n  return {\n    togglePopUp: (formName = '') => dispatch(togglePopUp(formName))\n  }\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(FormPopUp);","/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/serialize.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/store/actions/user.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/Sidebar/Sidebar.jsx",["213"],"import React from 'react';\n\nimport './Sidebar.scss';\nimport ListConversation from '../../components/BodyChatSideBar/BodyChatSideBar';\nimport { connect } from 'react-redux';\nimport HeaderChatSidebar from '../../components/HeaderChatSideBar/HeaderChatSideBar';\nimport HeaderFriendSideBar from '../../components/HeaderFriendSideBar/HeaderFriendSideBar';\nimport BodyFriendSideBar from '../../components/BodyFriendSideBar/BodyFriendSideBar';\nimport BodyChatSideBar from '../../components/BodyChatSideBar/BodyChatSideBar';\n\nconst Sidebar = ({ feature }) => {\n\n    var renderHeader = () => {\n        switch (feature) {\n            case \"Chat\": {\n                return (\n                    <HeaderChatSidebar />\n                )\n            }\n            case \"Friend\": {\n                return (\n                    <HeaderFriendSideBar />\n                )\n            }\n            default:\n                break;\n        }\n    }\n\n    var renderBody = () => {\n        switch (feature) {\n            case \"Chat\": {\n                return (\n                    <BodyChatSideBar />\n                )\n            }\n            case \"Friend\": {\n                return (\n                    <BodyFriendSideBar />\n                )\n            }\n            default:\n                break;\n        }\n    }\n\n    return (\n        <div className=\"sidebar\">\n            {renderHeader()}\n            {renderBody()}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        feature: state.navState.feature,\n        reqFriends: state.userState.reqFriends,\n        conversations: state.userState.conversations,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/Conversation/body/BodyConversation.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/NavFeature/NavFeature.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/HeaderChatSideBar/HeaderChatSideBar.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/auth/LoginPage/LoginPage.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/navigator/navigator.jsx",["214"],"import React, { useContext, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport './navigator.scss'\n\nimport NavFeature from '../../components/NavFeature/NavFeature';\nimport Sidebar from '../Sidebar/Sidebar';\nimport { SocketContext } from '../chatApp/ChatApp';\nimport { pushReqFriends } from '../../store/actions/user';\n\nconst Navigator = ({ pushReqFriends, isMobile }) => {\n    const socket = useContext(SocketContext);\n    useEffect(() => {\n        socket.on('REQ_ADD_FRIEND', (data) => {\n            console.log(data.req)\n            pushReqFriends(data.req)\n        })\n    }, [])\n    return (\n        <div className=\"navConversation\">\n            <NavFeature isMobile={isMobile} />\n            <Sidebar />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n    }\n}\n\nconst mapActionToProps = dispatch => {\n    return {\n        pushReqFriends: (req) => dispatch(pushReqFriends(req))\n    };\n}\n\n\nexport default connect(mapStateToProps, mapActionToProps)(Navigator);","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/SignUpForm/SignUpForm.jsx",["215"],"import { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport './SignUpForm.scss';\n\n//actions\nimport { handleSignUp } from '../../store/actions/auth';\nimport { Link } from 'react-router-dom';\n\nconst LoginForm = ({ handleSignUp }) => {\n  var [email, setEmail] = useState('');\n  var [username, setUsername] = useState('');\n  var [password, setPassword] = useState('');\n  var [repass, setRepass] = useState('');\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    handleSignUp(email, username, password, repass);\n  }\n  return (\n    <div className=\"login-wrapper\">\n      <div className=\"logo\"><svg x=\"0px\" y=\"0px\" width=\"612px\" height=\"612px\" viewBox=\"0 0 612 612\"><g><g id=\"_x32__26_\"><g><path d=\"M401.625,325.125h-191.25c-10.557,0-19.125,8.568-19.125,19.125s8.568,19.125,19.125,19.125h191.25                                     c10.557,0,19.125-8.568,19.125-19.125S412.182,325.125,401.625,325.125z M439.875,210.375h-267.75                                     c-10.557,0-19.125,8.568-19.125,19.125s8.568,19.125,19.125,19.125h267.75c10.557,0,19.125-8.568,19.125-19.125                                     S450.432,210.375,439.875,210.375z M306,0C137.012,0,0,119.875,0,267.75c0,84.514,44.848,159.751,114.75,208.826V612                                     l134.047-81.339c18.552,3.061,37.638,4.839,57.203,4.839c169.008,0,306-119.875,306-267.75C612,119.875,475.008,0,306,0z                                     M306,497.25c-22.338,0-43.911-2.601-64.643-7.019l-90.041,54.123l1.205-88.701C83.5,414.133,38.25,345.513,38.25,267.75                                     c0-126.741,119.875-229.5,267.75-229.5c147.875,0,267.75,102.759,267.75,229.5S453.875,497.25,306,497.25z\"></path></g></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg></div>\n      <h5>Create account</h5>\n      <form className=\"login-form\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"Email\"\n            placeholder=\"Email\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            placeholder=\"Your name\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            name=\"repass\"\n            id=\"repass\"\n            placeholder=\"Re-Password\"\n            onChange={(e) => setRepass(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Sign up\" />\n        </div>\n        <hr />\n        <div className=\"sign-up-tag\">\n          <p>Have an account?</p>\n          <Link to=\"/login\" className=\"link\">Sign in</Link>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleSignUp: (email, username, password, repass) => dispatch(handleSignUp(email, username, password, repass))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(LoginForm);","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormProfile/FormProfile.jsx",["216"],"import { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\n\nimport './FormProfile.scss';\n\n\nimport { submitProfile } from '../../store/actions/user';\nimport { togglePopUp } from '../../store/actions/nav';\n\nconst FormProfile = ({ submitProfile, togglePopUp, user }) => {\n  var formRef = useRef();\n  var checkBtnRef = useRef();\n\n  var [fullname, setFullname] = useState(user.username);\n  var [avatar, setAvatar] = useState(null);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    formRef.current.validateAll();\n    if (checkBtnRef.current.context._errors.length == 0) {\n      var formData = new FormData();\n      formData.append('username', fullname);\n      if (avatar)\n        formData.append('avatar', avatar, avatar.name);\n      submitProfile(formData);\n    }\n  }\n\n  return (\n    <div className=\"form-popup\">\n      <div className=\"form-title\">\n        <h4>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"></path></svg>\n          <span>Edit Profile</span>\n        </h4>\n        <button className=\"close-form\" onClick={(e) => togglePopUp()}><span>x</span></button>\n      </div>\n      <div className=\"form-body\">\n        <Form ref={formRef} onSubmit={handleSubmit} >\n          <div className=\"form-group\">\n            <Input\n              type=\"text\"\n              placeholder=\"Fullname\"\n              value={fullname}\n              onChange={e => setFullname(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group group-avatar\">\n            <Input\n              type=\"file\"\n              id=\"avatar\"\n              name=\"avatar\"\n              onChange={e => setAvatar(e.target.files[0])}\n            />\n            <div className=\"avatar\">\n              <img src={process.env.REACT_APP_API_URL + \"uploads/\" + user.avatar} alt=\"avatar\" />\n            </div>\n            <label htmlFor=\"avatar\">\n              <span>\n                {avatar ? avatar.name : \"Select avatar\"}\n              </span>\n            </label>\n          </div>\n          <CheckButton style={{ display: \"none\" }} ref={checkBtnRef} />\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Save\" />\n          </div>\n        </Form>\n      </div>\n    </div >\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userState.user\n  }\n}\n\n\nfunction mapActionToProps(dispatch) {\n  return {\n    submitProfile: (formData) => dispatch(submitProfile(formData)),\n    togglePopUp: (formName = '') => dispatch(togglePopUp(formName))\n  }\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(FormProfile);","/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/auth/SignUp/SignUpPage.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/setToken.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/store/reducers/user.js",["217","218","219","220"],"const initState = {\n    user: null,\n    token: localStorage.getItem(\"token\") || null,\n    friends: [],\n    reqFriends: [],\n    conversations: [],\n    error: false,\n    errMessage: '',\n    currentConversation: null,\n    newMessage: false\n\n}\n\nconst userReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN\":\n            {\n                return {\n                    ...state,\n                    ...action.payload\n                };\n\n            }\n        case \"FETCH_USER_INFOR\":\n            {\n                return {\n                    ...state,\n                    // user: action.payload.user,\n                    // friends: action.payload.friends,\n                    // reqFriends: action.payload.reqFriends\n                    ...action.payload\n                }\n            }\n        case \"LOGOUT\":\n            {\n                return initState;\n            }\n        case \"LOGIN_ERR\":\n            {\n                return {\n                    ...state,\n                    error: true,\n                    errMessage: action.payload.errMessage\n                }\n            }\n        case \"RESET_ERR\":\n            {\n                return {\n                    ...state,\n                    error: false,\n                    errMessage: ''\n                }\n            }\n        case \"UPDATE_USER_INFOR\":\n            {\n                return {\n                    ...state,\n                    user: {...state.user, ...action.payload.user }\n                }\n            }\n        case \"PUSH_REQ_FRIEND\":\n            {\n                return {\n                    ...state,\n                    reqFriends: [action.payload.from, ...state.reqFriends]\n                }\n            }\n        case \"ADD_NEW_FRIEND\":\n            {\n                return {\n                    ...state,\n                    friends: [...state.friends, action.payload.friend],\n                    reqFriends: state.reqFriends.filter(req => req._id !== action.payload.friend._id)\n                }\n            }\n        case \"OPEN_CONVERSATION\":\n            {\n                var conversationIndex = state.conversations.findIndex(con => con._id == action.payload.conversation._id)\n                if (conversationIndex !== -1) {\n                    return {\n                        ...state,\n                        currentConversation: conversationIndex\n                    }\n                } else {\n                    return {\n                        ...state,\n                        currentConversation: 0,\n                        conversations: [action.payload.conversation, ...state.conversations]\n                    }\n                }\n\n            }\n        case \"NEW_MESSAGE\":\n            {\n                let newConversations = state.conversations.map(con => {\n                    if (con._id == action.payload.conversationID) {\n                        return {\n                            ...con,\n                            messages: [...con.messages, action.payload.message],\n                            newMessage: state.user._id !== action.payload.message.user._id\n                        }\n                    } else return con;\n                })\n                return {\n                    ...state,\n                    conversations: newConversations,\n                    newMessage: state.user._id !== action.payload.message.user._id\n                }\n            }\n\n        case \"FIRST_MESSAGE\":\n            {\n                var conIndex = state.conversations.findIndex(con => con._id == action.payload.oldID);\n                if (conIndex != -1) {\n                    var newCons = [...state.conversations];\n                    newCons[conIndex] = action.payload.conversation\n                    return {\n                        ...state,\n                        conversations: newCons\n                    }\n                } else {\n                    return {\n                        ...state,\n                        conversations: [action.payload.conversation, ...state.conversations]\n                    }\n                }\n            }\n        case \"CHANGE_CONVERSATION\":\n            {\n                // if (state.conversations[action.payload.index].newMessage) {\n                //     state.conversations[action.payload.index].newMessage = false;\n                // }\n                return {\n                    ...state,\n                    currentConversation: action.payload.index\n                }\n            }\n        default:\n            {\n                return state;\n            }\n    }\n}\n\nexport default userReducer;","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/actions/conversations.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormAddFriends/FormAddFriends.jsx",["221"],"import { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\n\nimport { togglePopUp } from '../../store/actions/nav';\n\nimport User from '../../service/User';\n\nimport './FormAddFriends.scss';\nimport AddFriendItem from '../AddFriendItem/AddFriendItem';\n\nconst FormAddFriends = ({ togglePopUp }) => {\n  var formRef = useRef();\n  var checkBtnRef = useRef();\n\n  var [users, setUsers] = useState([]);\n\n  let timeout = null;\n  const handleSearch = (e) => {\n    e.preventDefault();\n    clearTimeout(timeout);\n    if (e.target.value) {\n      timeout = setTimeout(() => {\n        User.searchFriends(e.target.value).then(\n          res => {\n            setUsers(res.listUser)\n          })\n      }, 300)\n    }\n    else {\n      setUsers([]);\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    formRef.current.validateAll();\n    if (checkBtnRef.current.context._errors.length == 0) {\n      console.log('submit add friends')\n    }\n  }\n\n  var listUsers = users.length ? (\n    users.map((u, i) => <AddFriendItem friend={u} key={i} />)\n  ) : (\n    <div style={{\n      textAlign: \"center\",\n      color: 'gray'\n    }}>\n      Danh sách trống\n    </div>\n  );\n\n  return (\n    <div className=\"form-popup\">\n      <div className=\"form-title\">\n        <h4>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"8.5\" cy=\"7\" r=\"4\"></circle><line x1=\"20\" y1=\"8\" x2=\"20\" y2=\"14\"></line><line x1=\"23\" y1=\"11\" x2=\"17\" y2=\"11\"></line></svg>\n          <span>Add Friends</span>\n        </h4>\n        <button className=\"close-form\" onClick={(e) => togglePopUp()}><span>x</span></button>\n      </div>\n      <div className=\"form-body\">\n        <Form ref={formRef} onSubmit={handleSubmit} >\n          <div className=\"form-group\">\n            <Input\n              type=\"text\"\n              placeholder=\"Search by name or email\"\n              onChange={handleSearch}\n            />\n          </div>\n          <CheckButton style={{ display: \"none\" }} ref={checkBtnRef} />\n        </Form>\n        <ul className=\"list-user\">\n          {listUsers}\n        </ul>\n      </div>\n    </div >\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nfunction mapActionToProps(dispatch) {\n  return {\n    togglePopUp: (formName = '') => dispatch(togglePopUp(formName))\n  }\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(FormAddFriends);","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/Conversation/form/FormConversation.jsx",["222"],"import React, { useContext, useRef, useState } from 'react';\nimport { SocketContext } from '../../../containers/chatApp/ChatApp';\nimport Picker from 'emoji-picker-react';\n\nimport './FormConversation.scss';\n\nconst FormConversation = ({ conversation, user }) => {\n    var socket = useContext(SocketContext);\n    var [message, setMessage] = useState('');\n    var picker = useRef();\n    const sendMesss = (e) => {\n        e.preventDefault();\n        if (message !== '') {\n            socket.emit('SEND_MESSAGE', {\n                conversationID: conversation._id,\n                message: {\n                    user: user,\n                    content: message,\n                    time: new Date()\n                }\n            })\n            picker.current.classList.add('hidden');\n            setMessage('');\n        }\n    }\n\n    const sendFisrtMess = (e) => {\n        e.preventDefault();\n        if (message != '') {\n            socket.emit('FIRST_MESSAGE', {\n                conversationID: conversation._id,\n                users: conversation.users,\n                message: {\n                    user: user,\n                    content: message,\n                    time: new Date()\n                }\n            });\n            picker.current.classList.add('hidden');\n            setMessage('');\n        }\n    }\n\n    const onEmojiClick = (event, emojiObject) => {\n        setMessage(message + emojiObject.emoji)\n    };\n\n    const togglePicker = (e) => {\n        picker.current.classList.toggle('hidden');\n    }\n    return (\n        <div className=\"form-conversation\">\n\n            <form onSubmit={conversation._id.includes(\"NOT_EXIST\") ? sendFisrtMess : sendMesss}>\n                <div className=\"icon-wrapper\">\n                    <button className=\"icon\" type=\"button\" onClick={togglePicker}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#212529\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M8 14s1.5 2 4 2 4-2 4-2\"></path><line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line><line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line></svg>\n                    </button>\n                    <div className=\"icon-picker hidden\" ref={picker} >\n                        <Picker onEmojiClick={onEmojiClick} />\n                    </div>\n                </div>\n                <input\n                    className=\"mess-content\"\n                    type=\"text\"\n                    value={message}\n                    placeholder=\"Nhập tin nhắn ...\"\n                    onChange={(e) => setMessage(e.target.value)}\n                />\n                <button className=\"enclose\" type=\"button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48\"></path></svg></button>\n                <button className=\"submit\" type=\"submit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon></svg></button>\n\n            </form>\n        </div>\n    )\n}\n\nexport default FormConversation;","/home/ngoctrong102/Documents/chat/chat-app/client/src/index.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/containers/conversation/conversation.jsx",["223"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport './conversation.scss'\n\nimport HeaderConversation from '../../components/Conversation/header/HeaderConversation';\nimport BodyConversation from '../../components/Conversation/body/BodyConversation';\nimport FormConversation from '../../components/Conversation/form/FormConversation';\nconst Conversation = ({ conversation, user, isMobile }) => {\n    if (conversation)\n        return (\n            <div className=\"conversation\">\n                <HeaderConversation conversation={conversation} user={user} isMobile={isMobile} />\n                <BodyConversation conversation={conversation} user={user} />\n                <FormConversation conversation={conversation} user={user} />\n            </div>\n        )\n    else\n        return (\n            <div className=\"conversation alt\">\n                <img src=\"/none_conversation.svg\" className=\"alt-image\" alt=\"\" />\n                <p>Tạo một cuộc trò chuyện mới</p>\n            </div>\n        )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        conversation: state.userState.conversations[state.userState.currentConversation],\n        user: state.userState.user\n    };\n}\n\nconst mapActionToProps = dispatch => {\n    return {\n\n    };\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(Conversation);\n","/home/ngoctrong102/Documents/chat/chat-app/client/src/store/actions/nav.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/BodyFriendSideBar/BodyFriendSideBar.jsx",["224"],"import React, { useContext, useEffect } from 'react';\n\nimport './BodyFriendSideBar.scss';\n\nimport { connect } from 'react-redux';\nimport ItemReqFriend from '../ItemReqFriend/ItemReqFriend';\nimport ItemFriend from '../ItemFriend/ItemFriend';\nimport { SocketContext } from '../../containers/chatApp/ChatApp';\nimport { addNewFriend } from '../../store/actions/user';\n\nconst BodyFriendSideBar = ({ reqFriends, friends, addNewFriend }) => {\n\n  const socket = useContext(SocketContext);\n\n  useEffect(() => {\n    socket.on('ACCEPT_REQ_FRIEND', (data) => {\n      addNewFriend(data.friend);\n    })\n  }, [])\n\n  const itemsReqFriends = reqFriends.map((req, index) => {\n    return <ItemReqFriend reqFriend={req} key={index} />\n  })\n\n  const itemsFriends = friends.map((friend, index) => {\n    return <ItemFriend friend={friend} key={index} />\n  })\n\n  var toggleList = (e) => {\n    e.currentTarget.nextElementSibling.classList.toggle('hidden')\n  }\n  return (\n    <div className=\"friend-sidebar-body\">\n      <div className={`header ${reqFriends.length ? \"notify\" : \"\"}`} onClick={toggleList}>\n        <h4>Request Friend</h4>\n      </div>\n      <ul className=\"req-friend-list\">\n        {itemsReqFriends}\n      </ul>\n      <div className=\"header\">\n        <h4>Your Friend</h4>\n      </div>\n      <ul className=\"your-friend-list\">\n        {itemsFriends}\n      </ul>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    reqFriends: state.userState.reqFriends,\n    friends: state.userState.friends\n  };\n}\n\nconst mapActionToProps = dispatch => {\n  return {\n    addNewFriend: (friend) => dispatch(addNewFriend(friend))\n  };\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(BodyFriendSideBar);","/home/ngoctrong102/Documents/chat/chat-app/client/src/reportWebVitals.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/store/reducers/index.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/store/actions/auth.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/getToken.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/configs/socket.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/store/reducers/message.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/LoginForm/LoginForm.jsx",["225","226"],"import { useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { isEmail, isEmpty } from 'validator';\n\nimport './LoginForm.scss';\n\n//actions\nimport { handleLogin, resetErr } from '../../store/actions/auth';\nimport { Link } from 'react-router-dom';\n\n\n\nconst LoginForm = ({ handleLogin, errMessage, resetErr }) => {\n  var [email, setEmail] = useState('');\n  var [password, setPassword] = useState('');\n  var [rememberme, setRememberme] = useState(true);\n  var checkBtn = useRef();\n  var formLogin = useRef();\n\n  useEffect(() => {\n    return () => {\n      resetErr();\n    }\n  }, [])\n\n  const required = (value) => {\n    if (isEmpty(value)) {\n      return <p className=\"form-text text-danger\">This field is required</p>;\n    }\n  }\n\n  const isEmailValidate = (value) => {\n    if (!isEmail(value)) {\n      return <p className=\"form-text text-danger\">Invalid email format</p>;\n    }\n  }\n\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    formLogin.current.validateAll();\n    if (checkBtn.current.context._errors.length === 0) {\n      handleLogin(email, password, rememberme);\n    }\n  }\n  return (\n    <div className=\"login-wrapper\">\n      <div className=\"logo\"><svg x=\"0px\" y=\"0px\" width=\"612px\" height=\"612px\" viewBox=\"0 0 612 612\"><g><g id=\"_x32__26_\"><g><path d=\"M401.625,325.125h-191.25c-10.557,0-19.125,8.568-19.125,19.125s8.568,19.125,19.125,19.125h191.25                                     c10.557,0,19.125-8.568,19.125-19.125S412.182,325.125,401.625,325.125z M439.875,210.375h-267.75                                     c-10.557,0-19.125,8.568-19.125,19.125s8.568,19.125,19.125,19.125h267.75c10.557,0,19.125-8.568,19.125-19.125                                     S450.432,210.375,439.875,210.375z M306,0C137.012,0,0,119.875,0,267.75c0,84.514,44.848,159.751,114.75,208.826V612                                     l134.047-81.339c18.552,3.061,37.638,4.839,57.203,4.839c169.008,0,306-119.875,306-267.75C612,119.875,475.008,0,306,0z                                     M306,497.25c-22.338,0-43.911-2.601-64.643-7.019l-90.041,54.123l1.205-88.701C83.5,414.133,38.25,345.513,38.25,267.75                                     c0-126.741,119.875-229.5,267.75-229.5c147.875,0,267.75,102.759,267.75,229.5S453.875,497.25,306,497.25z\"></path></g></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg></div>\n      <h5>Sign in</h5>\n      <Form className=\"login-form\" onSubmit={handleSubmitForm} ref={formLogin}>\n        <div className=\"form-group\"><p className=\"form-text text-danger\">{errMessage}</p></div>\n        <div className=\"form-group\">\n          <Input\n            type=\"text\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"Email\"\n            onChange={(e) => setEmail(e.target.value)}\n            validations={[required, isEmailValidate]}\n          />\n        </div>\n        <div className=\"form-group\">\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            validations={[required]}\n          />\n        </div>\n        <div className=\"form-group flex\">\n          <div className=\"checkbox\">\n            <input type=\"checkbox\" name=\"rememberme\" id=\"rememberme\" checked={rememberme} onChange={(e) => setRememberme(e.target.checked)} />\n            <label htmlFor=\"rememberme\">\n              Remember me\n            </label>\n          </div>\n          <a href=\"#\" className=\"link\">Reset password</a>\n        </div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Sign in\" />\n        </div>\n        <hr />\n        <div className=\"sign-up-tag\">\n          <p>Don't have an account?</p>\n          <Link to=\"/signup\" className=\"link\">Sign up</Link>\n        </div>\n        <CheckButton style={{ display: 'none' }} ref={checkBtn} />\n      </Form>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    error: state.userState.error,\n    errMessage: state.userState.errMessage,\n  }\n}\n\nfunction mapActionToProps(dispatch) {\n  return {\n    handleLogin: (email, password, rememberme) => dispatch(handleLogin(email, password, rememberme)),\n    resetErr: () => dispatch(resetErr())\n  }\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(LoginForm);","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/BodyChatSideBar/BodyChatSideBar.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/HeaderFriendSideBar/HeaderFriendSideBar.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/FormCreateGroupChat/UserItem/UserItem.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/Conversation/body/MessageBox/MessageBox.jsx",["227"],"import React from 'react';\n\nimport './MessageBox.scss';\n\nconst MessageBox = ({ message, user }) => {\n  return (\n    <div className={message.user._id == user._id ? \"message-box me\" : \"message-box\"} >\n      <div className=\"avt\">\n        <img src={process.env.REACT_APP_API_URL + \"uploads/\" + message.user.avatar} alt=\"\" />\n      </div>\n      <div className=\"message-content\">\n        {message.content}\n      </div>\n      <div className=\"time\">\n        <small>Thứ 5 tháng 12, 19:20</small>\n      </div>\n    </div >\n  )\n}\n\n\nexport default MessageBox;","/home/ngoctrong102/Documents/chat/chat-app/client/src/components/ItemReqFriend/ItemReqFriend.jsx",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/helpers/popupWindow.js",[],"/home/ngoctrong102/Documents/chat/chat-app/client/src/components/CallPopUp/CallPopUp.jsx",["228","229","230","231","232"],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":54,"column":49,"nodeType":"239","messageId":"240","endLine":54,"endColumn":51},{"ruleId":"237","severity":1,"message":"238","line":19,"column":54,"nodeType":"239","messageId":"240","endLine":19,"endColumn":56},{"ruleId":"241","severity":1,"message":"242","line":29,"column":42,"nodeType":"243","endLine":29,"endColumn":117},{"ruleId":"244","severity":1,"message":"245","line":25,"column":6,"nodeType":"246","endLine":25,"endColumn":8,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":3,"column":36,"nodeType":"250","messageId":"251","endLine":3,"endColumn":42},{"ruleId":"244","severity":1,"message":"252","line":82,"column":6,"nodeType":"246","endLine":82,"endColumn":8,"suggestions":"253"},{"ruleId":"244","severity":1,"message":"254","line":88,"column":6,"nodeType":"246","endLine":88,"endColumn":16,"suggestions":"255"},{"ruleId":"256","severity":1,"message":"257","line":22,"column":5,"nodeType":"258","messageId":"259","endLine":36,"endColumn":6},{"ruleId":"248","severity":1,"message":"260","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":24},{"ruleId":"244","severity":1,"message":"261","line":18,"column":8,"nodeType":"246","endLine":18,"endColumn":10,"suggestions":"262"},{"ruleId":"248","severity":1,"message":"249","line":1,"column":20,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"263","line":24,"column":52,"nodeType":"239","messageId":"240","endLine":24,"endColumn":54},{"ruleId":"237","severity":1,"message":"263","line":78,"column":86,"nodeType":"239","messageId":"240","endLine":78,"endColumn":88},{"ruleId":"237","severity":1,"message":"263","line":96,"column":33,"nodeType":"239","messageId":"240","endLine":96,"endColumn":35},{"ruleId":"237","severity":1,"message":"263","line":113,"column":77,"nodeType":"239","messageId":"240","endLine":113,"endColumn":79},{"ruleId":"237","severity":1,"message":"238","line":114,"column":30,"nodeType":"239","messageId":"240","endLine":114,"endColumn":32},{"ruleId":"237","severity":1,"message":"263","line":40,"column":52,"nodeType":"239","messageId":"240","endLine":40,"endColumn":54},{"ruleId":"237","severity":1,"message":"238","line":29,"column":21,"nodeType":"239","messageId":"240","endLine":29,"endColumn":23},{"ruleId":"248","severity":1,"message":"264","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"265","line":19,"column":6,"nodeType":"246","endLine":19,"endColumn":8,"suggestions":"266"},{"ruleId":"244","severity":1,"message":"267","line":27,"column":6,"nodeType":"246","endLine":27,"endColumn":8,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":82,"column":11,"nodeType":"243","endLine":82,"endColumn":40},{"ruleId":"237","severity":1,"message":"263","line":7,"column":38,"nodeType":"239","messageId":"240","endLine":7,"endColumn":40},{"ruleId":"248","severity":1,"message":"271","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":19},{"ruleId":"244","severity":1,"message":"272","line":16,"column":13,"nodeType":"273","endLine":64,"endColumn":4},{"ruleId":"244","severity":1,"message":"274","line":18,"column":12,"nodeType":"275","endLine":23,"endColumn":7},{"ruleId":"244","severity":1,"message":"276","line":35,"column":14,"nodeType":"277","endLine":35,"endColumn":35},{"ruleId":"244","severity":1,"message":"278","line":49,"column":21,"nodeType":"279","endLine":49,"endColumn":100},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUserInfor' and 'user'. Either include them or remove the dependency array. If 'fetchUserInfor' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["282"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'addNewMessage', 'firstMessage', and 'socket'. Either include them or remove the dependency array. If 'addNewMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["283"],"React Hook useEffect has missing dependencies: 'changeConversation' and 'currentConversation'. Either include them or remove the dependency array. If 'changeConversation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["284"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'ListConversation' is defined but never used.","React Hook useEffect has missing dependencies: 'pushReqFriends' and 'socket'. Either include them or remove the dependency array. If 'pushReqFriends' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["285"],"Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'addNewFriend' and 'socket'. Either include them or remove the dependency array. If 'addNewFriend' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["286"],"React Hook useEffect has a missing dependency: 'resetErr'. Either include it or remove the dependency array. If 'resetErr' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["287"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useParams' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'peer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","Assignments to the 'socket' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'localStream' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [fetchUserInfor, user]",{"range":"300","text":"301"},"Update the dependencies array to be: [addNewMessage, firstMessage, socket]",{"range":"302","text":"303"},"Update the dependencies array to be: [changeConversation, currentConversation, isMobile]",{"range":"304","text":"305"},"Update the dependencies array to be: [pushReqFriends, socket]",{"range":"306","text":"307"},"Update the dependencies array to be: [addNewFriend, socket]",{"range":"308","text":"309"},"Update the dependencies array to be: [resetErr]",{"range":"310","text":"311"},[760,762],"[fetchUserInfor, user]",[2922,2924],"[addNewMessage, firstMessage, socket]",[3071,3081],"[changeConversation, currentConversation, isMobile]",[599,601],"[pushReqFriends, socket]",[594,596],"[addNewFriend, socket]",[767,769],"[resetErr]"]